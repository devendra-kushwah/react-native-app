{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport global from \"../../../style/global\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LogIn = function LogIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var container = global.container,\n      input = global.input;\n  return _jsxs(View, {\n    style: global.container,\n    children: [_jsx(TextInput, {\n      style: global.input,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(value) {\n        return setEmail(value);\n      },\n      value: email\n    }), _jsx(TextInput, {\n      style: global.input,\n      placeholder: \"Password\",\n      onChangeText: function onChangeText(value) {\n        return setPassword(value);\n      },\n      value: password\n    }), _jsx(Button, {\n      title: \"Log in\"\n    }), _jsxs(Text, {\n      children: [\"If you don't have account please \", _jsx(Button, {\n        onPress: function onPress() {\n          return navigation.push(\"SignUp\");\n        },\n        title: \"Sign up\"\n      }), \" \"]\n    })]\n  });\n};\n\nexport default LogIn;","map":{"version":3,"names":["React","useState","global","LogIn","navigation","email","setEmail","password","setPassword","container","input","value","push"],"sources":["/home/devendra.kumar/Devendra/learning/mobile-apps/firstApp/src/screens/logIn/logIn.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Text, TextInput, View } from \"react-native\";\nimport global from \"../../../style/global\";\n\nconst LogIn = ({ navigation }) => {\n  \n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\"); \n\n    const {container, input } = global;\n\n  return (\n    <View style={global.container}>\n        {/* <Text style={styles.title}> Log in</Text> */}\n        <TextInput\n           style={global.input}\n           placeholder=\"Email\"\n           onChangeText={(value=> setEmail(value))}\n           value={email}\n        />\n         <TextInput\n           style={global.input}\n           placeholder=\"Password\"\n           onChangeText={(value=> setPassword(value))}\n           value={password}\n        />\n        <Button  title=\"Log in\" />\n        <Text>If you don't have account please <Button onPress={()=> navigation.push(\"SignUp\")} title=\"Sign up\" /> </Text>\n    </View>\n  )\n}\n\nexport default LogIn;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,MAAP;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EAG9B,gBAA0BH,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgCL,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOM,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,IAAOC,SAAP,GAA4BP,MAA5B,CAAOO,SAAP;EAAA,IAAkBC,KAAlB,GAA4BR,MAA5B,CAAkBQ,KAAlB;EAEF,OACE,MAAC,IAAD;IAAM,KAAK,EAAER,MAAM,CAACO,SAApB;IAAA,WAEI,KAAC,SAAD;MACG,KAAK,EAAEP,MAAM,CAACQ,KADjB;MAEG,WAAW,EAAC,OAFf;MAGG,YAAY,EAAG,sBAAAC,KAAK;QAAA,OAAGL,QAAQ,CAACK,KAAD,CAAX;MAAA,CAHvB;MAIG,KAAK,EAAEN;IAJV,EAFJ,EAQK,KAAC,SAAD;MACE,KAAK,EAAEH,MAAM,CAACQ,KADhB;MAEE,WAAW,EAAC,UAFd;MAGE,YAAY,EAAG,sBAAAC,KAAK;QAAA,OAAGH,WAAW,CAACG,KAAD,CAAd;MAAA,CAHtB;MAIE,KAAK,EAAEJ;IAJT,EARL,EAcI,KAAC,MAAD;MAAS,KAAK,EAAC;IAAf,EAdJ,EAeI,MAAC,IAAD;MAAA,gDAAuC,KAAC,MAAD;QAAQ,OAAO,EAAE;UAAA,OAAKH,UAAU,CAACQ,IAAX,CAAgB,QAAhB,CAAL;QAAA,CAAjB;QAAiD,KAAK,EAAC;MAAvD,EAAvC;IAAA,EAfJ;EAAA,EADF;AAmBD,CA3BD;;AA6BA,eAAeT,KAAf"},"metadata":{},"sourceType":"module"}